<?php

namespace {{ author_pascal }}\{{ plugin_pascal }};

use Backend;
use System\Classes\PluginBase;
{% if addRegisterScheduleMethod %}
use Illuminate\Console\Scheduling\Schedule;
{% endif %}

class Plugin extends PluginBase
{
    public function pluginDetails()
    {
        return [
            'name'        => '{{ plugin_pascal }}',
            'description' => '{{ description }}',
            'author'      => '{{ author_pascal }}',
            'icon'        => 'icon-{{ icon }}'
        ];
    }

{% if addBootMethod %}
    public function boot()
    {
    }

{% endif %}
{% if addRegisterMethod %}
    public function register()
    {
    }

{% endif %}
{% if addRegisterComponentsMethod %}
    public function registerComponents()
    {
        return [
            // \{{ author_pascal }}\{{ plugin_pascal }}\Components\MyComponent::class => 'myComponent',
        ];
    }

{% endif %}
{% if addRegisterPermissionsMethod %}
    public function registerPermissions()
    {
        return [
            // '{{ author_lower }}.{{ plugin_lower }}.access' => [
            //     'label' => 'Access to {{ author_pascal }}.{{ plugin_pascal }}',
            //     'tab'   => '{{ author_pascal }}.{{ plugin_pascal }}',
            // ],
            // '{{ author_lower }}.{{ plugin_lower }}.access_settings' => [
            //     'label' => 'Access to {{ author_pascal }}.{{ plugin_pascal }} settings',
            //     'tab'   => '{{ author_pascal }}.{{ plugin_pascal }}',
            // ],
        ];
    }

{% endif %}
{% if addRegisterSettingsMethod %}
    public function registerSettings()
    {
        return [
            //
            // Settings Page
            //

            // 'settings' => [
            //     'label'       => '{{ author_pascal }}.{{ plugin_pascal }}',
            //     'description' => '{{ author_pascal }}.{{ plugin_pascal }} description',
            //     'category'    => \System\Classes\SettingsManager::CATEGORY_SYSTEM,
            //     'icon'        => 'icon-cog',
            //     'url'         => Backend::url('{{ author_lower }}/{{ plugin_lower }}/settings'),
            //     'order'       => 500,
            //     'keywords'    => '{{ author_lower }} {{ plugin_lower }}',
            //     'permissions' => ['{{ author_lower }}.{{ plugin_lower }}.access_settings']
            // ],

            //
            // Settings Model
            //

            // 'settings' => [
            //     'label'       => '{{ author_pascal }}.{{ plugin_pascal }}',
            //     'description' => '{{ author_pascal }}.{{ plugin_pascal }} description',
            //     'category'    => \System\Classes\SettingsManager::CATEGORY_SYSTEM,
            //     'icon'        => 'icon-cog',
            //     'class'       => \{{ author_pascal }}\{{ plugin_pascal }}\Models\Setting::class,
            //     'order'       => 500,
            //     'keywords'    => '{{ author_lower }} {{ plugin }}',
            //     'permissions' => ['{{ author_lower }}.{{ plugin_lower }}.access_settings']
            // ],
        ];
    }

{% endif %}
{% if addRegisterScheduleMethod %}
    /**
     * @param Schedule $schedule
     */
    public function registerSchedule($schedule)
    {
        // $schedule->command('{{ plugin_lower }}:my-command')->daily();
    }

{% endif %}
{% if addRegisterMailTemplatesMethod %}
    public function registerMailTemplates()
    {
        return [
            // '{{ author_lower }}.{{ plugin_lower }}::mail.welcome'
        ];
    }

{% endif %}
{% if addRegisterMailLayoutsMethod %}
    public function registerMailLayouts()
    {
        return [
            // 'marketing' => '{{ author_lower }}.{{ plugin_lower }}::layouts.marketing',
            // 'notification' => '{{ author_lower }}.{{ plugin_lower }}::layouts.notification',
        ];
    }

{% endif %}
{% if addRegisterMailPartialsMethod %}
    public function registerMailPartials()
    {
        return [
            // 'tracking' => '{{ author_lower }}.{{ plugin_lower }}::partials.tracking',
            // 'promotion' => '{{ author_lower }}.{{ plugin_lower }}::partials.promotion',
        ];
    }

{% endif %}
{% if addRegisterMarkupTagsMethod %}
    public function registerMarkupTags()
    {
        return [
            'filters' => [
            ],
            'functions' => [
            ]
        ];
    }

{% endif %}
{% if addRegisterContentFieldsMethod %}
    public function registerContentFields()
    {
        return [
            // \{{ author_pascal }}\{{ plugin_pascal }}\ContentFields\MyContentField::class => 'mycontentfield'
        ];
    }

{% endif %}
{% if addRegisterNavigationMethod %}
    public function registerNavigation()
    {
        return [
        //    '{{ plugin_lower }}' => [
        //         'label'       => '{{ plugin_pascal }}',
        //         'url'         => Backend::url('{{ author_lower }}/{{ plugin_lower }}'),
        //         'icon'        => 'icon-leaf',
        //         'permissions' => ['{{ author_lower }}.{{ plugin_lower }}.*'],
        //     ],
        ];
    }

{% endif %}
}
