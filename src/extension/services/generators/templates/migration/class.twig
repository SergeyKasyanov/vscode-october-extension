<?php

namespace {{ namespace }}\Updates;

use Schema;
use October\Rain\Database\Schema\Blueprint;
use October\Rain\Database\Updates\Migration;

{% if anonymousClass %}
return new class extends Migration
{% else %}
class {{ migration_pascal }} extends Migration
{% endif %}
{
    public function up()
    {
{% if action == 'create' %}
        Schema::create('{{ table }}', static function (Blueprint $table) {
{% if usesTableId %}
            $table->id();
{% else %}
            $table->increments('id');
{% endif %}
{% if addSlug %}

            $table->string('slug')->unique();
{% endif %}
{% if addSortOrder %}

            $table->unsignedInteger('sort_order')->default(0);
{% endif %}
{% if addSimpleTree %}

{% if usesTableId %}
            $table->foreignId('parent_id')->nullable()->constrained('{{ table }}')->nullOnDelete();
{% else %}
            $table->unsignedInteger('parent_id')->nullable();
            $table->foreign('parent_id')->references('id')->on('{{ table }}')->onDelete('set null');
{% endif %}
{% endif %}
{% if addNestedTree %}

{% if usesTableId %}
            $table->foreignId('parent_id')->nullable()->constrained('{{ table }}')->nullOnDelete();
{% else %}
            $table->unsignedInteger('parent_id')->nullable();
            $table->foreign('parent_id')->references('id')->on('{{ table }}')->onDelete('set null');
{% endif %}

            $table->integer('nest_left')->nullable();
            $table->integer('nest_right')->nullable();
            $table->integer('nest_depth')->nullable();
{% endif %}
{% if addTimestamps %}

{% if withTimezones %}
            $table->timestampsTz();
{% else %}
            $table->timestamps();
{% endif %}
{% endif %}
{% if addSoftDelete %}

{% if withTimezones %}
            $table->softDeletesTz();
{% else %}
            $table->softDeletes();
{% endif %}
{% endif %}
{% if addMultisite %}

            $table->integer('site_id')->nullable()->index();
            $table->integer('site_root_id')->nullable()->index();
{% endif %}
        });
{% else %}
        Schema::table('{{ table }}', static function (Blueprint $table) {
            //
        });
{% endif %}
    }

    public function down()
    {
{% if action == 'create' %}
        Schema::dropIfExists('{{ table }}');
{% else %}
        Schema::table('{{ table }}', static function (Blueprint $table) {
            //
        });
{% endif %}
    }
{% if anonymousClass %}
};
{% else %}
}
{% endif %}
